@using InspectR.Helpers
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>InspectB.in - Inspect and debug webhooks</title>
    <meta name="description" content="Test webhooks and inspect http requests with InspectBin">
    <meta name="author" content="Remco Ros &amp; NOMORE404">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    @Styles.Render("~/Content/bootstrap")
    @RenderSection("styles", required: false)
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <nav class="navbar navbar-inverse navbar-static-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#mainnav">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@Url.InspectR().Index()">
                    InspectB<small>.</small>in
                    <div class="label label-success" style="position: relative; top: -2px;">alpha</div>
                </a>
            </div>

            <div class="collapse navbar-collapse" id="mainnav">
                @RenderSection("menu", false)
                <ul class="nav navbar-nav">
                    <li>
                        <a href="@Url.InspectR().Create()">Create New</a>
                    </li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @if (!Request.IsAuthenticated)
                    {
                        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: new { ReturnUrl = Request.Url.PathAndQuery }, htmlAttributes: new { id = "registerLink" })</li>
                        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: new { ReturnUrl = Request.Url.PathAndQuery }, htmlAttributes: new { id = "loginLink" })</li>
                    }
                    else
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                @User.Identity.Name<b class="caret"></b>
                            </a>
                            <ul class="dropdown-menu" role="menu">
                                <li>@Html.ActionLink("My Account", "Index", "Manage", routeValues: null, htmlAttributes: new { @class = "username", title = "Manage" })</li>
                                <li>
                                    <a href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
                                    @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", style = "display:none" }))
                                    {
                                        @Html.AntiForgeryToken()
                                    }
                                </li>
                            </ul>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="colorbar"></div>
    </nav>
    <div class="container">

        @RenderBody()

        <hr>

        <footer class="row">
            <p>&copy; InspectB.in 2015</p>
        </footer>

    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/knockoutextra")

    @RenderSection("scripts", required: false)

    @Html.Analytics()

    <script type="text/javascript">
        var uvOptions = {};
        (function () {
            var uv = document.createElement('script');
            uv.type = 'text/javascript';
            uv.async = true;
            uv.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'widget.uservoice.com/A2vkv1u3epn8vppouvnGhA.js';
            var s = document.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(uv, s);
        })();
    </script>
</body>
</html>